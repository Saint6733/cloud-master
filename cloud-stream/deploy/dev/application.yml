spring:
  datasource:
    url: jdbc:mysql://localhost:3306/mysql?useSSL=false&characterEncoding=UTF-8&autoReconnect=true&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password: root
    hikari:
      pool-name: mysql/ds1
      connection-timeout: 45000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 5
      minimum-idle: 0
      connection-test-query: "select 1"
      validation-timeout: 1000
      isolate-internal-queries: true
  cloud:
    stream:
        #使用kafka作为消息中间件
        kafka:
          binder:
            #消息中间件服务器地址，集群的话加，分隔
            brokers: localhost:9092
            zk-nodes: localhost:2181
            #最小分区数量
            minPartitionCount: 1
            autoCreateTopics: true
            autoAddPartitions: true
        bindings:
          #input消息接收方1
          testa:
            #消息要发往的目的地
            destination: test_spring_stream
            #分组：同一分组下的消费者，只有一个消费者能消费消息
            group: group-1
            #消费者
            consumer:
              #流入消费者的并发性
              concurrency: 1
              #消费者是否接受来自一个分区的生产者数据
              partitioned: false
          #input消息接收方2
          testb:
            destination: test_stream
            #分组
            group: group-2
          #output消息发出方1
          sourceA:
            #消息来源
            destination: test_spring_stream
            #生产者
            producer:
              partitionCount: 1
          #output消息发出方2
          sourceB:
            destination: test_stream